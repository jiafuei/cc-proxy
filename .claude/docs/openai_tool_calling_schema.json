{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OpenAI Tool Calling Comprehensive Schema",
  "description": "Comprehensive JSON schema for OpenAI's tool calling API",
  "definitions": {
    "function_tool": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "function"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]{1,64}$",
          "description": "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
        },
        "description": {
          "type": "string",
          "maxLength": 1024,
          "description": "A description of what the function does, used by the model to choose when and how to call the function."
        },
        "parameters": {
          "type": "object",
          "description": "The parameters the functions accepts, described as a JSON Schema object. Omit the description if the function takes no parameters."
        },
        "strict": {
          "type": "boolean",
          "description": "Whether to enable strict schema adherence when generating the function call. If set to true, the model will follow the exact schema defined in the parameters field."
        }
      },
      "required": ["type", "name"],
      "additionalProperties": false
    },
    "custom_tool": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "custom"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]{1,64}$",
          "description": "The name of the custom tool. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
        },
        "description": {
          "type": "string",
          "maxLength": 1024,
          "description": "A description of what the tool does."
        },
        "format": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "grammar"
            },
            "syntax": {
              "type": "string",
              "enum": ["lark", "regex"],
              "description": "The syntax type for the grammar definition"
            },
            "definition": {
              "type": "string",
              "description": "The grammar definition string in the specified syntax"
            }
          },
          "required": ["type", "syntax", "definition"],
          "additionalProperties": false
        }
      },
      "required": ["type", "name", "description"],
      "additionalProperties": false
    },
    "tool_choice": {
      "oneOf": [
        {
          "type": "string",
          "enum": ["none", "auto", "required"],
          "description": "Controls which (if any) tool is called by the model"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "function"
            },
            "function": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the function to call"
                }
              },
              "required": ["name"],
              "additionalProperties": false
            }
          },
          "required": ["type", "function"],
          "additionalProperties": false
        }
      ]
    },
    "tool_call": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the tool call"
        },
        "type": {
          "type": "string",
          "const": "function"
        },
        "function": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the function to call"
            },
            "arguments": {
              "type": "string",
              "description": "The arguments to call the function with, as generated by the model in JSON format"
            }
          },
          "required": ["name", "arguments"],
          "additionalProperties": false
        }
      },
      "required": ["id", "type", "function"],
      "additionalProperties": false
    },
    "function_call_output": {
      "type": "object",
      "properties": {
        "tool_call_id": {
          "type": "string",
          "description": "The ID of the tool call this output is for"
        },
        "output": {
          "type": "string",
          "description": "The output of the function call"
        }
      },
      "required": ["tool_call_id", "output"],
      "additionalProperties": false
    },
    "json_schema_parameters": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "object"
        },
        "properties": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "$ref": "#/definitions/json_schema_property"
            }
          }
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "boolean"
        }
      },
      "required": ["type", "properties"],
      "additionalProperties": false
    },
    "json_schema_property": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["string", "number", "integer", "boolean", "array", "object", "null"]
        },
        "description": {
          "type": "string"
        },
        "enum": {
          "type": "array"
        },
        "items": {
          "$ref": "#/definitions/json_schema_property"
        },
        "properties": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "$ref": "#/definitions/json_schema_property"
            }
          }
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "boolean"
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "minLength": {
          "type": "integer"
        },
        "maxLength": {
          "type": "integer"
        },
        "pattern": {
          "type": "string"
        }
      },
      "required": ["type"],
      "additionalProperties": true
    }
  },
  "type": "object",
  "properties": {
    "tools": {
      "type": "array",
      "items": {
        "oneOf": [
          {"$ref": "#/definitions/function_tool"},
          {"$ref": "#/definitions/custom_tool"}
        ]
      },
      "description": "A list of tools the model may call"
    },
    "tool_choice": {
      "$ref": "#/definitions/tool_choice",
      "description": "Controls which (if any) tool is called by the model"
    },
    "parallel_tool_calls": {
      "type": "boolean",
      "description": "Whether to enable parallel function calling during tool use"
    },
    "tool_calls": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/tool_call"
      },
      "description": "The tool calls generated by the model"
    },
    "function_call_outputs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/function_call_output"
      },
      "description": "The outputs of the function calls"
    }
  },
  "examples": [
    {
      "function_tool_example": {
        "type": "function",
        "name": "get_weather",
        "description": "Retrieves current weather for the given location.",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "City and country e.g. BogotÃ¡, Colombia"
            },
            "unit": {
              "type": "string",
              "enum": ["celsius", "fahrenheit"],
              "description": "The temperature unit to use"
            }
          },
          "required": ["location"],
          "additionalProperties": false
        },
        "strict": true
      }
    },
    {
      "custom_tool_lark_example": {
        "type": "custom",
        "name": "code_exec",
        "description": "Executes arbitrary Python code.",
        "format": {
          "type": "grammar",
          "syntax": "lark",
          "definition": "start: statement+\nstatement: assignment | expression | import_stmt | if_stmt | for_stmt | while_stmt | function_def | class_def\nassignment: NAME \"=\" expression\nexpression: term (\"+\" term | \"-\" term)*\nterm: factor (\"*\" factor | \"/\" factor)*\nfactor: NUMBER | NAME | \"(\" expression \")\"\nimport_stmt: \"import\" NAME\nif_stmt: \"if\" expression \":\" statement+\nfor_stmt: \"for\" NAME \"in\" expression \":\" statement+\nwhile_stmt: \"while\" expression \":\" statement+\nfunction_def: \"def\" NAME \"(\" [NAME (\",\" NAME)*] \")\" \":\" statement+\nclass_def: \"class\" NAME \":\" statement+\n%import common.CNAME -> NAME\n%import common.NUMBER\n%import common.WS\n%ignore WS"
        }
      }
    },
    {
      "custom_tool_regex_example": {
        "type": "custom",
        "name": "simple_calculator",
        "description": "Performs basic arithmetic operations.",
        "format": {
          "type": "grammar",
          "syntax": "regex",
          "definition": "^(\\d+(\\.\\d+)?\\s*[+\\-*/]\\s*\\d+(\\.\\d+)?)$"
        }
      }
    },
    {
      "tool_choice_examples": {
        "auto": "auto",
        "none": "none",
        "required": "required",
        "specific_function": {
          "type": "function",
          "function": {
            "name": "get_weather"
          }
        }
      }
    },
    {
      "tool_call_example": {
        "id": "call_abc123",
        "type": "function",
        "function": {
          "name": "get_weather",
          "arguments": "{\"location\": \"Boston, MA\"}"
        }
      }
    },
    {
      "function_call_output_example": {
        "tool_call_id": "call_abc123",
        "output": "The weather in Boston, MA is currently 72Â°F and sunny."
      }
    }
  ]
}